@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
@font-face { font-family: 'NanumSquareRound'; src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_two@1.0/NanumSquareRound.woff') format('woff'); font-weight: normal; font-style: normal; }

$shadow: 5px 5px 30px -15px rgba(black, .3);
$white: #fff;
$color: #FFAE1E;
$grey: #D8D9E1;
$lightgrey: rgba(#D8D9E1, .3);
$border: 1px solid $lightgrey;
$left-width: 20%;
$right-width: 60%;
$per100: 100%;
$transition: .1s ease-in-out all;
$gap: 1.5rem;

$breakpoints: (
        'small': (max-width: 920px),
        'medium': (max-width: 1200px),
//         'large': (max-width: 1200px),
) !default;

@mixin respond-to($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media #{inspect(map-get($breakpoints, $breakpoint))} {
            @content;
        }
    }
    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

@mixin default-font {
	font: {
		family: 'Roboto', 'NanumSquareRound', sans-serif;
		size: 1.2rem;
	}
	@include respond-to('small') {
		font-size: 1rem;
    }
}

@mixin profile-img {
	margin-right: 1rem;
	figure {
		box-shadow: $shadow;
		width: 80px;
		height: 80px;
		border-radius: 100%;
		overflow: hidden;
		@include respond-to('small') {
			width: 60px;
			height: 60px;
	    }
		img {
			width: $per100;
		}
	}
}

* {
	box-sizing: border-box;
}

*::selection {
	background: $color;
	color: $white;
}

body.reset {
	* {
		font-size: 0;
		color: opacity;
	}
}

body {
	@include default-font;
	color: #222;
	background-color: $lightgrey;
}

.alttxt {
	position: absolute;
	left: -9999999px;
}

.highlighted {
	background-color: rgba($color, .5);
}

a {
	text-decoration: none;
	color: inherit;
}

input, button, textarea {
	border: none;
	background: none;
	outline: none;
	padding: 0;
	resize: none;
	@include default-font;
}

button {
	cursor: pointer;
}

.btn {
	font: {
		size: 1rem;
		weight: 700;
	}
	background-color: $color;
	color: $white;
	padding: .8rem 1.2rem;
	border-radius: 2rem;
	cursor: pointer;
	box-shadow: $shadow;
}

#postLoading-box {
	border: 3px solid transparent;
    border-top-color: $color;
    border-bottom-color: $color;
    border-radius: 50%;
    animation: rotation .8s ease infinite;
    width: 2rem;
    height: 2rem;
}

#loading-box {
	width: 2rem;
	height: 2rem;
	background-color: $color;
	animation: loading 1s infinite linear;
	margin: 0 auto;
}

@keyframes loading {
    0% { transform: rotate(0deg); border-radius: $per100; }
    50% { transform: rotate(90deg); border-radius: 0; }
    100% { transform: rotate(180deg); border-radius: $per100; }
}

@keyframes rotation{
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.container {
	position: relative;
	margin: 0 auto;
}

header {
	width: $left-width;
	height: $per100;
	padding: 3rem;
	position: fixed;
	left: 0; top: 0;
	background-color: $white;
	box-shadow: $shadow;
	@include respond-to('medium') {
		padding: 2rem;
    }
    @include respond-to('small') {
	    display: none;
    }
	i {
		font-size: 1.6rem;
		margin-right: 1rem;
		&::before {
			vertical-align: middle;
		}
	}
	ul {
		margin-top: 5rem;
	}
	li {
		margin-top: 2rem;
		font-weight: 600;
		&.active a, a:hover {
			color: $color;
			transition: $transition;
		}
	}
	.wrap > * {
		margin-bottom: 5rem;
	}
	.search {
		display: flex;
		color: $grey;
		i {
			@include default-font;
		}
		input {
			width: 100%;
			&::placeholder {
			color: $lightgrey;
			font-weight: 600;
			}
		}
	}
	.profile {
		.profile-img {
			@include profile-img;
			margin-bottom: 2rem;
		}
		h1 {
			font-weight: 600;
			margin-bottom: 1rem;
		}
		span {
			color: $grey;
		}
	}
}

main {
	width: $right-width;
	margin-left: $left-width;
	@include respond-to('medium') {
		width: $right-width + $left-width;
    }
    @include respond-to('small') {
		width: $per100;
		margin-left: 0;
    }
}

#timeline {
	padding: $gap;
	.post-container {
		background-color: $white;
		box-shadow: $shadow;
		border-radius: .5rem;
		overflow: hidden;
	}
}

.write-box {
	position: relative;
	padding: 2rem;
	background-color: rgba($color, .3);
	.profile-img {
		@include profile-img;
	}
	.input-group {
		width: $per100;
		margin-bottom: $gap;
		background-color: rgba($white, .5);
		border-radius: .5rem;
		textarea {
			width: inherit;
			height: 4.5rem;
			padding: $gap;
			transition: $transition;
			&::placeholder {
				color: rgba($color, .5);
			}
			&:focus {
				height: 10rem;
			}
		}
	}
	.submit-group {
		display: flex;
		align-items: center;
		justify-content: space-between;
	}
}

.post-box {
	padding: 2rem;
	transition: $transition;
	border-bottom: $border;
	&.blur .post-wrap {
		filter: blur(5px);
		opacity: .5;
	}
	.post-wrap {
		display: flex;
		transition: $transition;
		.profile-img {
			@include profile-img;
		}
		.post-group {
			width: $per100;
			.name {
				font: {
					weight: 600;
				}
				margin-bottom: 1rem;
				display: block;
			}
			.body {
				line-height: 1.4;
			}
		}
		.btn-group {
			position: relative;
			margin-left: 1rem;
			>button {
				line-height: 1;
				&:hover {
					color: $color;
				}
			}
			.dropdown-menu {
				position: absolute;
				right: 0;
				&.hide {
					display: none;
				}
			}
		}
	}
}

.loader {
	padding: 2rem 0;
}

#side {
	width: $left-width;
	padding-left: 0;
	position: fixed;
	right: 0; top: 0;
	height: $per100;
	overflow: scroll;
	.side-container {
		padding: $gap;
		padding-left: 0;
		display: grid;
		grid-gap: $gap;
		grid-template-columns: $per100;
	}
	@include respond-to('medium') {
		display: none;
    }
}

aside {
	background-color: $white;
	border-radius: .5rem;
	overflow: hidden;
	box-shadow: $shadow;
}

.popular {
	.popular-img {
		height: 240px;
		background: {
			image: url('../popular.jpg');
			size: cover;
			repeat: no-repeat;
		}
	}
	.description {
		padding: $gap;
		span {
			color: $color;
			font-size: 1rem;
			font-weight: 600;
		}
		h2 {
			margin: 1rem 0;
			font-weight: 600;
		}
		p {
			font-size: 1rem;
			line-height: 1.4;
			color: $grey;
		}
	}
}

.people {
	padding: $gap;
	.profile-img {
		@include profile-img;
	}
	li {
		display: flex;
		align-items: center;
		margin-top: 1rem;
		.info {
			width: $per100;
		}
	}
	h2 {
		font-weight: 600;
		margin-bottom: $gap;
	}
	p {
		font-size: 1rem;
		color: $color;
		font-weight: 600;
		margin-bottom: .2rem;
	}
	span {
		color: $grey;
		font-size: .8rem;
	}
}